# generate_hash.py

from passlib.context import CryptContext
import getpass
import os

# Configuraci√≥n del contexto de hashing (la misma que usar√°s en security.py)
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def hash_password(password: str) -> str:
    """Hashea una contrase√±a usando bcrypt."""
    return pwd_context.hash(password)

def main():
    """Funci√≥n principal para solicitar la contrase√±a y mostrar el hash."""
    
    # Limpia la consola para mayor privacidad antes de solicitar la contrase√±a
    os.system('cls' if os.name == 'nt' else 'clear')
    
    print("-------------------------------------------------------")
    print("  üîë GENERADOR DE HASH BCRYPT PARA GOOGLE SHEETS üîë")
    print("-------------------------------------------------------")
    print("Ingresa la contrase√±a para hashear. No se mostrar√° en pantalla.")
    
    # Usamos getpass para que la contrase√±a no se muestre mientras se escribe
    password = getpass.getpass("Contrase√±a: ")
    
    if not password:
        print("\n¬°Error! La contrase√±a no puede estar vac√≠a.")
        return

    hashed_pw = hash_password(password)
    
    print("\n-------------------------------------------------------")
    print("‚úÖ HASH GENERADO EXITOSAMENTE (COPIAR Y PEGAR):")
    print("-------------------------------------------------------")
    print(hashed_pw)
    print("-------------------------------------------------------")
    print("\n‚ö†Ô∏è  COPIA este hash y p√©galo en la columna PASSWORD_HASH de tu hoja 'USUARIOS'.")
    print("   NUNCA uses la contrase√±a original en la hoja.")


if __name__ == "__main__":
    main()